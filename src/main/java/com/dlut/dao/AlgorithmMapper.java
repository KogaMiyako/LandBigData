package com.dlut.dao;

import com.dlut.pojo.Algorithm;
import com.dlut.pojo.AlgorithmExample;
import com.dlut.pojo.AlgorithmWithBLOBs;
import java.util.List;

import com.dlut.pojo.Rank;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.springframework.stereotype.Repository;

@Repository
public interface AlgorithmMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    int countByExample(AlgorithmExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    int deleteByExample(AlgorithmExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    @Delete({
        "delete from algorithm",
        "where algorithm_id = #{algorithmId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer algorithmId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    @Insert({
        "insert into algorithm (algorithm_id, algorithm_name, ",
        "algorithm_cmd, algorithm_author, ",
        "algorithm_time, class_id, ",
        "class_name, algorithm_describe, ",
        "algorithm_tip)",
        "values (#{algorithmId,jdbcType=INTEGER}, #{algorithmName,jdbcType=VARCHAR}, ",
        "#{algorithmCmd,jdbcType=VARCHAR}, #{algorithmAuthor,jdbcType=VARCHAR}, ",
        "#{algorithmTime,jdbcType=TIMESTAMP}, #{classId,jdbcType=INTEGER}, ",
        "#{className,jdbcType=VARCHAR}, #{algorithmDescribe,jdbcType=LONGVARCHAR}, ",
        "#{algorithmTip,jdbcType=LONGVARCHAR})"
    })
    int insert(AlgorithmWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    int insertSelective(AlgorithmWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    List<AlgorithmWithBLOBs> selectByExampleWithBLOBs(AlgorithmExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    List<Algorithm> selectByExample(AlgorithmExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "algorithm_id, algorithm_name, algorithm_cmd, algorithm_author, algorithm_time, ",
        "class_id, class_name, algorithm_describe, algorithm_tip",
        "from algorithm",
        "where algorithm_id = #{algorithmId,jdbcType=INTEGER}"
    })
    @ResultMap("ResultMapWithBLOBs")
    AlgorithmWithBLOBs selectByPrimaryKey(Integer algorithmId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") AlgorithmWithBLOBs record, @Param("example") AlgorithmExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    int updateByExampleWithBLOBs(@Param("record") AlgorithmWithBLOBs record, @Param("example") AlgorithmExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Algorithm record, @Param("example") AlgorithmExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(AlgorithmWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    @Update({
        "update algorithm",
        "set algorithm_name = #{algorithmName,jdbcType=VARCHAR},",
          "algorithm_cmd = #{algorithmCmd,jdbcType=VARCHAR},",
          "algorithm_author = #{algorithmAuthor,jdbcType=VARCHAR},",
          "algorithm_time = #{algorithmTime,jdbcType=TIMESTAMP},",
          "class_id = #{classId,jdbcType=INTEGER},",
          "class_name = #{className,jdbcType=VARCHAR},",
          "algorithm_describe = #{algorithmDescribe,jdbcType=LONGVARCHAR},",
          "algorithm_tip = #{algorithmTip,jdbcType=LONGVARCHAR}",
        "where algorithm_id = #{algorithmId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(AlgorithmWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table algorithm
     *
     * @mbggenerated
     */
    @Update({
        "update algorithm",
        "set algorithm_name = #{algorithmName,jdbcType=VARCHAR},",
          "algorithm_cmd = #{algorithmCmd,jdbcType=VARCHAR},",
          "algorithm_author = #{algorithmAuthor,jdbcType=VARCHAR},",
          "algorithm_time = #{algorithmTime,jdbcType=TIMESTAMP},",
          "class_id = #{classId,jdbcType=INTEGER},",
          "class_name = #{className,jdbcType=VARCHAR}",
        "where algorithm_id = #{algorithmId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Algorithm record);

    List<Rank> getMonthRank();

    List<Rank> getYearRank();
}