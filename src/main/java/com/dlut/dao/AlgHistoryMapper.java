package com.dlut.dao;

import com.dlut.pojo.AlgHistory;
import com.dlut.pojo.AlgHistoryExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface AlgHistoryMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    int countByExample(AlgHistoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    int deleteByExample(AlgHistoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    @Delete({
        "delete from alg_history",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    @Insert({
        "insert into alg_history (id, alg_id, ",
        "user_id, data_file_name, ",
        "data_flle_type, exec_time, ",
        "reslut_dir_name)",
        "values (#{id,jdbcType=INTEGER}, #{algId,jdbcType=INTEGER}, ",
        "#{userId,jdbcType=INTEGER}, #{dataFileName,jdbcType=VARCHAR}, ",
        "#{dataFlleType,jdbcType=VARCHAR}, #{execTime,jdbcType=VARCHAR}, ",
        "#{reslutDirName,jdbcType=VARCHAR})"
    })
    int insert(AlgHistory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    int insertSelective(AlgHistory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    List<AlgHistory> selectByExample(AlgHistoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, alg_id, user_id, data_file_name, data_flle_type, exec_time, reslut_dir_name",
        "from alg_history",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    AlgHistory selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") AlgHistory record, @Param("example") AlgHistoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") AlgHistory record, @Param("example") AlgHistoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(AlgHistory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alg_history
     *
     * @mbggenerated
     */
    @Update({
        "update alg_history",
        "set alg_id = #{algId,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=INTEGER},",
          "data_file_name = #{dataFileName,jdbcType=VARCHAR},",
          "data_flle_type = #{dataFlleType,jdbcType=VARCHAR},",
          "exec_time = #{execTime,jdbcType=VARCHAR},",
          "reslut_dir_name = #{reslutDirName,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(AlgHistory record);
}